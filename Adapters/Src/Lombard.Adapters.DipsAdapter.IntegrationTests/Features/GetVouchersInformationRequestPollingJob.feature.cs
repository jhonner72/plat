// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Lombard.Adapters.DipsAdapter.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GetVouchersInformationRequestPollingJobFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetVouchersInformationRequestPollingJob.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetVouchersInformationRequestPollingJob", "Given a valid record in request database\r\nAnd valid record in database\r\nWhen wait" +
                    " and a GetVouchersInformationRequestPollingJob executed\r\nThen a GetVouchersInfor" +
                    "mationRequest is added to the exchange", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "GetVouchersInformationRequestPollingJob")))
            {
                Lombard.Adapters.DipsAdapter.IntegrationTests.Features.GetVouchersInformationRequestPollingJobFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Get Vouchers Information request")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetVouchersInformationRequestPollingJob")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("GetVouchersInformationRequestPollingJob")]
        public virtual void GetVouchersInformationRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Vouchers Information request", new string[] {
                        "GetVouchersInformationRequestPollingJob"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "guid_name",
                        "payload",
                        "request_time",
                        "RequestCompleted"});
            table1.AddRow(new string[] {
                        "12345",
                        "[{\"name\":\"documentReferenceNumber\",\"value\":\"583000026\"},{\"name\":\"processingDate\"," +
                            "\"value\":\"14-09-2015\"},{\"name\":\"surplusItemFlag\",\"value\":true}]",
                        "9/15/2015 12:00:00 AM",
                        "false"});
            table1.AddRow(new string[] {
                        "67890",
                        "[{\"name\":\"documentReferenceNumber\",\"value\":\"583000027\"},{\"name\":\"processingDate\"," +
                            "\"value\":\"14-09-2015\"},{\"name\":\"surplusItemFlag\",\"value\":true}]",
                        "9/15/2015 12:00:00 AM",
                        "false"});
#line 9
 testRunner.Given("there are GetVouchersInformationRequest records in the request table", ((string)(null)), table1, "Given ");
#line 13
 testRunner.When("wait for 10 seconds until GetVouchersInformationRequestPollingJob executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table2.AddRow(new string[] {
                        "documentReferenceNumber",
                        "583000026"});
            table2.AddRow(new string[] {
                        "processingDate",
                        "14-09-2015"});
            table2.AddRow(new string[] {
                        "surplusItemFlag",
                        "True"});
#line 14
 testRunner.Then("a GetVouchersInformationRequest 12345 is added to the exchange and contains these" +
                    " information:", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "value"});
            table3.AddRow(new string[] {
                        "documentReferenceNumber",
                        "583000027"});
            table3.AddRow(new string[] {
                        "processingDate",
                        "14-09-2015"});
            table3.AddRow(new string[] {
                        "surplusItemFlag",
                        "True"});
#line 19
 testRunner.And("a GetVouchersInformationRequest 67890 is added to the exchange and contains these" +
                    " information:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
