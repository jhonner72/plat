// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18408
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Lombard.Adapters.DipsAdapter.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CorrectCodelineResponsePollingJobFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CorrectCodelineResponsePollingJob.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Correct Codeline Response Polling Job", "Given a valid record in queue database\r\nAnd valid vouchers in database\r\nWhen wait" +
                    " and a CorrectCodelineResponsePollingJob executed\r\nThen a CorrectBatchCodelineRe" +
                    "sponse including vouchers is added to the exchange", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Correct Codeline Response Polling Job")))
            {
                Lombard.Adapters.DipsAdapter.IntegrationTests.Features.CorrectCodelineResponsePollingJobFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send correct codeline response")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Correct Codeline Response Polling Job")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CorrectCodelineResponsePollingJob")]
        public virtual void SendCorrectCodelineResponse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send correct codeline response", new string[] {
                        "CorrectCodelineResponsePollingJob"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "S_LOCATION",
                        "CodelineCorrectDone"});
            table1.AddRow(new string[] {
                        "S_LOCK",
                        "0"});
            table1.AddRow(new string[] {
                        "S_CLIENT",
                        "NabChq"});
            table1.AddRow(new string[] {
                        "S_JOB_ID",
                        "NabChqPod"});
            table1.AddRow(new string[] {
                        "S_MODIFIED",
                        "0"});
            table1.AddRow(new string[] {
                        "S_COMPLETE",
                        "0"});
            table1.AddRow(new string[] {
                        "S_BATCH",
                        "58300013"});
            table1.AddRow(new string[] {
                        "S_TRACE",
                        "583000026"});
            table1.AddRow(new string[] {
                        "S_PRIORITY",
                        "5"});
            table1.AddRow(new string[] {
                        "S_VERSION",
                        "4.0.2.152"});
            table1.AddRow(new string[] {
                        "S_SDATE",
                        "31/03/15"});
            table1.AddRow(new string[] {
                        "S_STIME",
                        "12:30:00"});
            table1.AddRow(new string[] {
                        "RoutingKey",
                        "NSBD"});
#line 9
 testRunner.Given("there are Codeline Correction database rows for batch number 58300013 in DipsQueu" +
                    "e database", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "S_BATCH",
                        "S_TRACE",
                        "S_LENGTH",
                        "batch",
                        "trace",
                        "proc_date",
                        "ead",
                        "ser_num",
                        "bsb_num",
                        "acc_num",
                        "trancode",
                        "amount",
                        "job_id",
                        "ie_endpoint",
                        "unproc_flag",
                        "doc_ref_num",
                        "S_SEQUENCE",
                        "sys_date",
                        "captureBSB",
                        "processing_state",
                        "collecting_bank",
                        "unit_id",
                        "isGeneratedVoucher"});
            table2.AddRow(new string[] {
                        "58300013",
                        "583000026",
                        "01025",
                        "58300013",
                        "583000026",
                        "20150331",
                        "",
                        "001193",
                        "013812",
                        "256902729",
                        "50",
                        "45.67",
                        "NabChqPod",
                        "NAB",
                        "1",
                        "583000026",
                        "0000",
                        "20150624",
                        "085384",
                        "SA",
                        "123456",
                        "123",
                        "0"});
            table2.AddRow(new string[] {
                        "58300013",
                        "583000027",
                        "01025",
                        "58300013",
                        "583000027",
                        "20150331",
                        "",
                        "001193",
                        "092002",
                        "814649",
                        "50",
                        "2341.45",
                        "NabChqPod",
                        "NAB",
                        "0",
                        "583000027",
                        "0001",
                        "20150625",
                        "085384",
                        "SA",
                        "789101",
                        "123",
                        "1"});
#line 24
 testRunner.And("there are Codeline Correction database rows for batch number 58300013 in DipsNabC" +
                    "hq database", ((string)(null)), table2, "And ");
#line 28
 testRunner.When("wait for 10 seconds until CorrectCodelineResponsePollingJob executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "documentReferenceNumber",
                        "bsbNumber",
                        "accountNumber",
                        "auxDom",
                        "extraAuxDom",
                        "transactionCode",
                        "amount",
                        "targetEndPoint",
                        "unprocessable",
                        "collectingBank"});
            table3.AddRow(new string[] {
                        "583000026",
                        "013812",
                        "256902729",
                        "001193",
                        "",
                        "50",
                        "45.67",
                        "NAB",
                        "True",
                        "123456"});
            table3.AddRow(new string[] {
                        "583000027",
                        "092002",
                        "814649",
                        "001193",
                        "",
                        "50",
                        "2341.45",
                        "NAB",
                        "False",
                        "789101"});
#line 29
 testRunner.Then("a CorrectBatchCodelineResponse with batch number 58300013 is added to the exchang" +
                    "e and contains these vouchers:", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "workType",
                        "NABCHQ_POD"});
            table4.AddRow(new string[] {
                        "processingState",
                        "SA"});
            table4.AddRow(new string[] {
                        "scannedBatchNumber",
                        "58300013"});
            table4.AddRow(new string[] {
                        "captureBSB",
                        "085384"});
            table4.AddRow(new string[] {
                        "collectingBank",
                        "123456"});
            table4.AddRow(new string[] {
                        "unitID",
                        "123"});
#line 33
 testRunner.And("a CorrectBatchCodelineResponse with batch number 58300013 contains this voucher b" +
                    "atch:", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send correct codeline response with exclude flag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Correct Codeline Response Polling Job")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CorrectCodelineResponsePollingJob")]
        public virtual void SendCorrectCodelineResponseWithExcludeFlag()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send correct codeline response with exclude flag", new string[] {
                        "CorrectCodelineResponsePollingJob"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "S_LOCATION",
                        "CodelineCorrectDone"});
            table5.AddRow(new string[] {
                        "S_LOCK",
                        "0"});
            table5.AddRow(new string[] {
                        "S_CLIENT",
                        "NabChq"});
            table5.AddRow(new string[] {
                        "S_JOB_ID",
                        "NabChqPod"});
            table5.AddRow(new string[] {
                        "S_MODIFIED",
                        "0"});
            table5.AddRow(new string[] {
                        "S_COMPLETE",
                        "0"});
            table5.AddRow(new string[] {
                        "S_BATCH",
                        "58300019"});
            table5.AddRow(new string[] {
                        "S_TRACE",
                        "583000028"});
            table5.AddRow(new string[] {
                        "S_PRIORITY",
                        "5"});
            table5.AddRow(new string[] {
                        "S_VERSION",
                        "4.0.2.152"});
            table5.AddRow(new string[] {
                        "S_SDATE",
                        "31/03/15"});
            table5.AddRow(new string[] {
                        "S_STIME",
                        "12:30:00"});
            table5.AddRow(new string[] {
                        "RoutingKey",
                        "NSBD"});
#line 44
 testRunner.Given("there are Codeline Correction database rows for batch number 58300019 in DipsQueu" +
                    "e database", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "S_BATCH",
                        "S_TRACE",
                        "S_LENGTH",
                        "batch",
                        "trace",
                        "proc_date",
                        "ead",
                        "ser_num",
                        "bsb_num",
                        "acc_num",
                        "trancode",
                        "amount",
                        "job_id",
                        "ie_endpoint",
                        "unproc_flag",
                        "export_exclude_flag",
                        "doc_ref_num",
                        "S_SEQUENCE",
                        "sys_date",
                        "captureBSB",
                        "processing_state",
                        "collecting_bank",
                        "unit_id"});
            table6.AddRow(new string[] {
                        "58300019",
                        "583000028",
                        "01025",
                        "58300019",
                        "583000028",
                        "20150331",
                        "",
                        "001193",
                        "013812",
                        "256902729",
                        "50",
                        "45.67",
                        "NabChqPod",
                        "NAB",
                        "1",
                        "0",
                        "583000028",
                        "0000",
                        "20150624",
                        "085384",
                        "SA",
                        "123456",
                        "123"});
            table6.AddRow(new string[] {
                        "58300019",
                        "583000029",
                        "01025",
                        "58300019",
                        "583000029",
                        "20150331",
                        "",
                        "001193",
                        "092002",
                        "814649",
                        "50",
                        "2341.45",
                        "NabChqPod",
                        "NAB",
                        "0",
                        "0",
                        "583000029",
                        "0001",
                        "20150624",
                        "085384",
                        "SA",
                        "123456",
                        "123"});
            table6.AddRow(new string[] {
                        "58300019",
                        "583000030",
                        "01025",
                        "58300019",
                        "583000030",
                        "20150331",
                        "",
                        "001193",
                        "065002",
                        "814149",
                        "50",
                        "921.45",
                        "NabChqPod",
                        "NAB",
                        "0",
                        "1",
                        "583000030",
                        "0002",
                        "20150624",
                        "085384",
                        "SA",
                        "123456",
                        "123"});
#line 59
 testRunner.And("there are Codeline Correction database rows for batch number 58300019 in DipsNabC" +
                    "hq database", ((string)(null)), table6, "And ");
#line 64
 testRunner.When("wait for 10 seconds until CorrectCodelineResponsePollingJob executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "documentReferenceNumber",
                        "bsbNumber",
                        "accountNumber",
                        "auxDom",
                        "extraAuxDom",
                        "transactionCode",
                        "amount",
                        "targetEndPoint",
                        "unprocessable"});
            table7.AddRow(new string[] {
                        "583000028",
                        "013812",
                        "256902729",
                        "001193",
                        "",
                        "50",
                        "45.67",
                        "NAB",
                        "True"});
            table7.AddRow(new string[] {
                        "583000029",
                        "092002",
                        "814649",
                        "001193",
                        "",
                        "50",
                        "2341.45",
                        "NAB",
                        "False"});
#line 65
 testRunner.Then("a CorrectBatchCodelineResponse with batch number 58300019 is added to the exchang" +
                    "e and contains these vouchers:", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "workType",
                        "NABCHQ_POD"});
            table8.AddRow(new string[] {
                        "processingState",
                        "SA"});
            table8.AddRow(new string[] {
                        "scannedBatchNumber",
                        "58300019"});
            table8.AddRow(new string[] {
                        "captureBSB",
                        "085384"});
            table8.AddRow(new string[] {
                        "collectingBank",
                        "123456"});
            table8.AddRow(new string[] {
                        "unitID",
                        "123"});
#line 69
 testRunner.And("a CorrectBatchCodelineResponse with batch number 58300013 contains this voucher b" +
                    "atch:", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send correct codeline response with repost")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Correct Codeline Response Polling Job")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CorrectCodelineResponsePollingJob")]
        public virtual void SendCorrectCodelineResponseWithRepost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send correct codeline response with repost", new string[] {
                        "CorrectCodelineResponsePollingJob"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "S_LOCATION",
                        "CodelineCorrectDone"});
            table9.AddRow(new string[] {
                        "S_LOCK",
                        "0"});
            table9.AddRow(new string[] {
                        "S_CLIENT",
                        "NabChq"});
            table9.AddRow(new string[] {
                        "S_JOB_ID",
                        "NabChqPod"});
            table9.AddRow(new string[] {
                        "S_MODIFIED",
                        "0"});
            table9.AddRow(new string[] {
                        "S_COMPLETE",
                        "0"});
            table9.AddRow(new string[] {
                        "S_BATCH",
                        "58300021"});
            table9.AddRow(new string[] {
                        "S_TRACE",
                        "583000026"});
            table9.AddRow(new string[] {
                        "S_PRIORITY",
                        "5"});
            table9.AddRow(new string[] {
                        "S_VERSION",
                        "4.0.2.152"});
            table9.AddRow(new string[] {
                        "S_SDATE",
                        "31/03/15"});
            table9.AddRow(new string[] {
                        "S_STIME",
                        "12:30:00"});
            table9.AddRow(new string[] {
                        "RoutingKey",
                        "NSBD"});
#line 80
 testRunner.Given("there are Codeline Correction database rows for batch number 58300021 in DipsQueu" +
                    "e database", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "S_BATCH",
                        "S_TRACE",
                        "S_LENGTH",
                        "batch",
                        "trace",
                        "proc_date",
                        "ead",
                        "ser_num",
                        "bsb_num",
                        "acc_num",
                        "trancode",
                        "amount",
                        "job_id",
                        "ie_endpoint",
                        "unproc_flag",
                        "doc_ref_num",
                        "S_SEQUENCE",
                        "sys_date",
                        "captureBSB",
                        "processing_state",
                        "collecting_bank",
                        "unit_id",
                        "repostFromDRN",
                        "repostFromProcessingDate"});
            table10.AddRow(new string[] {
                        "58300021",
                        "583000026",
                        "01025",
                        "58300021",
                        "583000026",
                        "20150331",
                        "",
                        "001193",
                        "013812",
                        "256902729",
                        "50",
                        "45.67",
                        "NabChqPod",
                        "NAB",
                        "1",
                        "583000026",
                        "0000",
                        "20150624",
                        "085384",
                        "SA",
                        "123456",
                        "123",
                        "583000026",
                        ""});
            table10.AddRow(new string[] {
                        "58300021",
                        "583000027",
                        "01025",
                        "58300021",
                        "583000027",
                        "20150331",
                        "",
                        "001193",
                        "092002",
                        "814649",
                        "50",
                        "2341.45",
                        "NabChqPod",
                        "NAB",
                        "0",
                        "583000027",
                        "0001",
                        "20150625",
                        "085384",
                        "SA",
                        "123456",
                        "123",
                        "583000027",
                        "20150625"});
#line 95
 testRunner.And("there are Codeline Correction database rows for batch number 58300013 in DipsNabC" +
                    "hq database", ((string)(null)), table10, "And ");
#line 99
 testRunner.When("wait for 10 seconds until CorrectCodelineResponsePollingJob executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "documentReferenceNumber",
                        "bsbNumber",
                        "accountNumber",
                        "auxDom",
                        "extraAuxDom",
                        "transactionCode",
                        "amount",
                        "targetEndPoint",
                        "unprocessable",
                        "repostFromDRN",
                        "repostFromProcessingDate"});
            table11.AddRow(new string[] {
                        "583000026",
                        "013812",
                        "256902729",
                        "001193",
                        "",
                        "50",
                        "45.67",
                        "NAB",
                        "True",
                        "583000026",
                        "19500101"});
            table11.AddRow(new string[] {
                        "583000027",
                        "092002",
                        "814649",
                        "001193",
                        "",
                        "50",
                        "2341.45",
                        "NAB",
                        "False",
                        "583000027",
                        "20150625"});
#line 100
 testRunner.Then("a CorrectBatchCodelineResponse with batch number 58300021 is added to the exchang" +
                    "e and contains these vouchers:", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "workType",
                        "NABCHQ_POD"});
            table12.AddRow(new string[] {
                        "processingState",
                        "SA"});
            table12.AddRow(new string[] {
                        "scannedBatchNumber",
                        "58300021"});
            table12.AddRow(new string[] {
                        "captureBSB",
                        "085384"});
            table12.AddRow(new string[] {
                        "collectingBank",
                        "123456"});
            table12.AddRow(new string[] {
                        "unitID",
                        "123"});
#line 104
 testRunner.And("a CorrectBatchCodelineResponse with batch number 58300013 contains this voucher b" +
                    "atch:", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
