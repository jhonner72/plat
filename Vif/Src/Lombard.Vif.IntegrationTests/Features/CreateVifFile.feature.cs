// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Lombard.Vif.IntegrationTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CreateVIFFileFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateVifFile.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create VIF File", "In order to send data to NAB\r\nAs the Vif service\r\nI want to create a VIF file", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Create VIF File")))
            {
                Lombard.Vif.IntegrationTests.Features.CreateVIFFileFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void CreateVifFile(string request, string vifOutputName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "vif"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create vif file", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
  testRunner.Given(string.Format("some vouchers is in \"{0}\" job folder", request), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("a request with job id \"{0}\" to create a vif file is submitted", request), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
   testRunner.When("the request is consumed by the service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
   testRunner.Then(string.Format("a vif file named \"{0}\" should be generated in \"{1}\" job folder", vifOutputName, request), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
   testRunner.And(string.Format("the generated vif file named \"{0}\" in \"{1}\" job folder is correct", vifOutputName, request), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Request1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "Request1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB381.D151028.R87")]
        public virtual void CreateVifFile_Request1()
        {
            this.CreateVifFile("Request1", "MO.FXA.VIF.NAB381.D151028.R87", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "SingleCreditDebit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "SingleCreditDebit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB380.D151030.R34")]
        public virtual void CreateVifFile_SingleCreditDebit()
        {
            this.CreateVifFile("SingleCreditDebit", "MO.FXA.VIF.NAB380.D151030.R34", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CorrectPrimeCreditChosen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "CorrectPrimeCreditChosen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB380.D151030.R34")]
        public virtual void CreateVifFile_CorrectPrimeCreditChosen()
        {
            this.CreateVifFile("CorrectPrimeCreditChosen", "MO.FXA.VIF.NAB380.D151030.R34", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PrimeCreditHasNoAuxDom")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "PrimeCreditHasNoAuxDom")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB380.D151030.R34")]
        public virtual void CreateVifFile_PrimeCreditHasNoAuxDom()
        {
            this.CreateVifFile("PrimeCreditHasNoAuxDom", "MO.FXA.VIF.NAB380.D151030.R34", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NoVoucherData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "NoVoucherData")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB380.D151030.R34")]
        public virtual void CreateVifFile_NoVoucherData()
        {
            this.CreateVifFile("NoVoucherData", "MO.FXA.VIF.NAB380.D151030.R34", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Create vif file")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Create VIF File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("vif")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "HighValueCreditChosen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Request", "HighValueCreditChosen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:VifOutputName", "MO.FXA.VIF.NAB380.D151030.R34")]
        public virtual void CreateVifFile_HighValueCreditChosen()
        {
            this.CreateVifFile("HighValueCreditChosen", "MO.FXA.VIF.NAB380.D151030.R34", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
