// [OptionsLogging]
// If problems are encountered when Ranger reads this GenericOptions.ini file,
// then Ranger will write messages to a file called RangerGenericOptions.log 
// in the current directory. The log file is deleted and recreated each time 
// Ranger reads this GenericOptions.ini file.
//
//  Enabled: true or false (default)
//  Path=Default (default) or the full path to the preferred location.
//------------------------------------------------------------------------------

[OptionsLogging]
Enabled=true
Path=Default

//------------------------------------------------------------------------------
//[OptionalDevices]  - Section to enable devices that impact performance on some transports.
//                     If this section is not present or if an entry is not present, then
//                     the missing device(s) will be disabled.
//NeedMicrEncoder  = - Legal values: "true", any other value implies "false"
//NeedFrontEndorser=
//NeedRearEndorser =
//NeedFrontStamp   =
//NeedRearStamp    =
//NeedMicrofilmer  =
//NeedDoubleDocDetection =
//             
//NeedOcr =         - If "true", OCR reading is required.
//    
//NeedOcrReader1 = 
//NeedOcrReader2 =  - If "true", then NeedOcrReader1 must also be true
//NeedOcrReader3 =  - If "true", then NeedOcrReader1 and NeedOcrReader2 must also be true
//
//NeedImaging =     - If "true", imaging is required.
//
//NeedFrontImage1 = - Is set to "true" then the image will be scanned, if possible
//NeedFrontImage2 = 
//NeedFrontImage3 = 
//NeedFrontImage4 = 
//
//NeedRearImage1 = 
//NeedRearImage2 = 
//NeedRearImage3 = 
//NeedRearImage4 = 
//
//BWTiffCompliance= - if "X9.100-181ToughTiff",    (default)                  
//                     then B&W images will be converted to conform to the X9B Tough-Tiff specification
//                  - if "ScannerRaw", images will not be converted
//
//NeedIQA           = - If "true", image quality analysis is requested.
//NeedIQAUpstream   = - If "true", IQA results needed in SetItemOutput event.
//NeedIQADownstream = - If "true", IQA results available in ItemInPocket event.
//
//NeedPocketGroups = - If "true", then pocket groups will be read from the [Pockets] section.
//
//NeedScout = - If "true", enable remote monitoring, if Scout is installed.
//
//-------------------------------------------------

[OptionalDevices]
NeedMicrEncoder  = false
NeedFrontEndorser= false
NeedRearEndorser =true
NeedFrontStamp   = false
NeedRearStamp    = false
NeedMicrofilmer  = false
NeedDoubleDocDetection = true

NeedOcr =True

NeedOcrReader1 =True
NeedOcrReader2 = false
NeedOcrReader3 = false

NeedImaging =True

NeedFrontImage1 =True
NeedFrontImage2 =True
NeedFrontImage3 =false
NeedFrontImage4 = false

NeedRearImage1 = true
NeedRearImage2 = true
NeedRearImage3 =false
NeedRearImage4 =False

BWTiffCompliance=X9.100-181ToughTiff

NeedIQA           = false
NeedIQAUpstream   = false
NeedIQADownstream = false

NeedPeacemaker           = false
NeedPeacemakerUpstream   = false
NeedPeacemakerDownstream = false

NeedPocketGroups = false

NeedScout = true

//------------------------------------------------------------------------------
//[FrontEndorser]
//
//    Type
//
//      Physical: typically inkjet based imprinting on the actual item.
//
//      Electronic: a.k.a. "virtual" endorsing on the item image only, no change
//                  to the actual item.
//
//      All: every available endorsement type will be applied to each item 
//           scanned.  This is the default value.
//
//    Mode
//
//      Batch:  endorsing the entire batch the same.
//	
//      CurrentItem:  endorsing each item as processed
//
//      NextItem:  endorsing the next item processed
//
//
//   EnableEmulationOfEndorserMode
//
//      If "true", Ranger will emulate specified endorser mode when possible.
//   
//------------------------------------------------------------------------------
[FrontEndorser]
Type=Physical
Mode=Batch
EnableEmulationOfEndorserMode = false

//------------------------------------------------------------------------------
//[RearEndorser]
//    Type (See FrontEndorser section above for details)
//    Mode (See FrontEndorser section above for details)
//------------------------------------------------------------------------------
[RearEndorser]
Type=Physical
Mode=Batch
EnableEmulationOfEndorserMode = false

//------------------------------------------------------------------------------
//[FrontStamp] and [RearStamp] - these sections define additional stamp 
//                 options that are required by some transports.
//                 
//StaticPosition=  - offset from leading edge in millimeters for stamps 
//                   that cannot be positioned on a per item basis.                   
//                   The default value is zero.
//
//  For rear stamps that support trail edge triggering, a value of -1 
//  indicates that the stamp should be applied 1.5 inches from the 
//  trailing edge of the item.
//
//Common StaticPosition values in millimeters:
//
//  ABA defined endorsement zones for rear stamp
//
//   1  First transit endorsement 0.05 inches from the leading edge
//  38  Second transit endorsement 1.5 inches from the leading edge
//  77  Bank of first deposit endorsement 3.0 inches from the leading edge
//  -1  Payee endorsement zone 1.5 inches from the trailing edge
//
//StampFileN =   - Where 'N' is a number from 1 to 10.  This is the FULL PATH 
//                 name of a stamp file to use with transports that support 
//                 stamp switching while running items.
//
//                 Blank entries between file names are not allowed. Ranger 
//                 will stop reading file names when a blank entry is detected.
//
//                 The format of the contents of the stamp files is 
//                 transport dependent.
//
//------------------------------------------------------------------------------

[FrontStamp]
StaticPosition=0
StampFile1 =
StampFile2 =
StampFile3 = 
StampFile4 = 
StampFile5 = 
StampFile6 = 
StampFile7 = 
StampFile8 = 
StampFile9 = 
StampFile10 =

[RearStamp]
StaticPosition=-1
StampFile1 = 
StampFile2 = 
StampFile3 = 
StampFile4 = 
StampFile5 = 
StampFile6 = 
StampFile7 = 
StampFile8 = 
StampFile9 = 
StampFile10 = 

//------------------------------------------------------------------------------
//[OcrReaderN]      - where 'N' is the OCR line number defined in the transport information file. 
//                    This section is only read if the corresponding NeedOcrReaderN = true.
//
//Font=             - Font of OCR line. 
//                    Legal values: See TransportInfo.ini [OcrReader*] sections.
//
//VerticalCenter=   - Vertical center of the OCR line in millimeters from bottom of item.
//Right=            - Right edge of OCR line in millimeters from the right edge of the item.
//Width=            - Width of OCR line in millimeters from the "Right" value.
//Height=           - Height of OCR line in millimeters.
//------------------------------------------------------------------------------

//Example:
//
//[OcrReader1]
//Font=E13B
//VerticalCenter=7
//Right=0
//Width=150
//Height=10

//------------------------------------------------------------------------------
//[Imaging]   - This section that defines general imaging parameters. 
//
//RootCaptureDirectory =  - All image files will be created in sub-directories beneath this directory.
//                          Please note that some transport types such as the Unisys DP500, 1150, etc.
//                          and NCR 779Xs require an image capture server (ICS) PC.  For these transport
//                          types, the ICS controls where images are stored and Ranger cannont control
//                          where the root directory is located. Therefore, the image root capture 
//                          directory must be defined using the transport vendor's instruction for when
//                          using these transport types.
//
//                          If image fileset storage (see "storagefile" below) is
//                          defined and this option is not specified, a default
//                          value of "c:\images" will be used.
//
//ImagesNeededToMakePocketDecision= - Set this to indicate if images are needed
//                                    to make a pocket decision. Valid values:
//
//                                    true -      the application requires all
//                                                requested images to make a
//                                                pocket decision;
//                                    false     - the application requires no
//                                                images to make a pocket
//                                                decision;
//                                    FrontOnly - the application requires only
//                                                the requested front images to
//                                                make a pocket decision;
//                                    default   - false.
//
//                                    NOTE: Setting this values to "true" may
//                                          cause some transports to pause or
//                                          slow while scanning.
//
//------------------------------------------------------------------------------

[Imaging]
RootCaptureDirectory=C:\dips\ranger
ImagesNeededToMakePocketDecision=false

//------------------------------------------------------------------------------
//[FrontImageN]   - where 'N' is the image number defined in the transport information file. 
//                  This section is only read if the corresponding NeedFrontImageN = true.
//
//StorageFile=    - Extention of the file name in which this image will be stored.
//                  Legal values for [FrontImage1]: "FIM" or "None"
//                                   [FrontImage2]: "FI2" or "None"
//                  "None" implies that Ranger should scan the image but not store it in a file.
//
//------------------------------------------------------------------------------

[FrontImage1]
StorageFile = None

[FrontImage2]
StorageFile = None

[FrontImage3]
StorageFile = None

[FrontImage4]
StorageFile = None

//------------------------------------------------------------------------------
//[RearImageN]    - where 'N' is the image number defined in the transport information file. 
//                  This section is only read if the corresponding NeedRearImageN = true.
//
//StorageFile=    - Extention of the file name in which this image will be stored.
//                  Legal values for [RearImage1]: "RIM" or "None"
//                                   [RearImage2]: "RI2" or "None"
//                  "None" implies that Ranger should scan the image but not store it in a file.
//
//------------------------------------------------------------------------------

[RearImage1]
StorageFile = None

[RearImage2]
StorageFile = None

[RearImage3]
StorageFile = None

[RearImage4]
StorageFile = None

//------------------------------------------------------------------------------
//[Pockets]          - This section allows you to override the 1-to-1 mapping of 
//                     physical to logical pockets.  This section is only read if
//                     NeedPocketGroups=true and the scanner supports this feature.
//
//PocketFullCount=   - A pocket is logically full when this many items are sent to the pocket.
//                     If the full pocket is part of a pocket group, then new items will be sent
//                     to the next pocket in the group.  When the last pocket in the group is
//                     full, the operator will be prompted to clear the group.
//                     If this entry is not present or the value is zero, then the transport's 
//                     default count will be used.
//
//RangerRejectPocket= This is the reject pocket that Ranger sendx items to during exeception handling.
//                    Many transports send rejects to a fixed pocket.  Ranger will send reject items 
//                    to this pocket by default if possible. Otherwise Ranger sends rejects to the
//                    first pocket.  Supported values:
//                    FirstPocket - Ranger rejects will be sent to the first logical pocket
//                    LastPocket - Ranger rejects will be sent to the last logical pocket
//                    UseHardwareDefault - If supported by the hardware, Ranger rejects will be sent 
//                                        to pocket that the transport normally sends rejects to.
//                                        This is the default value.
//
//PhysicalPocketN=   - Where 'N' is the physical pocket number.
//                     Value is: logical pocket number, "pocket name"
//                     Logical pocket number is the one given to Ranger as the destination pocket.
//                     "pocket name" a two character string displayed to the operator during jam handling.
//                     The pocket name is optional and if not present, the physical pocket number will
//                     be displayed to the operator.
//
//------------------------------------------------------------------------------

[Pockets]
PocketFullCount=0
RangerRejectPocket= UseHardwareDefault
PhysicalPocket1=1,"1"
PhysicalPocket2=2,"2"
PhysicalPocket3=3,"3"
PhysicalPocket4=4,"4"
PhysicalPocket5=5,"5"
PhysicalPocket6=6,"6"
PhysicalPocket7=7,"7"
PhysicalPocket8=8,"8"
PhysicalPocket9=9,"9"
PhysicalPocket10=10,"10"
PhysicalPocket11=11,"11"
PhysicalPocket12=12,"12"

//------------------------------------------------------------------------------
//[ExceptionHandling] - If this section defines exception handling options for scanners
//                       that allow Ranger to control the exception processing.
//
//Enabled -  If set to false, Ranger's exception manager will never prompt the user, and
//           management will be left to the application.
//
//AutoHandPocket- Where "true" (default) implies that items that have not 
//                reached their pocket prior to an exception can be automatically completed
/                 by Ranger exception handling.
//                "false"  implies that items that have completed all output 
//                operations except pocketing will be reprocessed 
//                during exception handling.
//
//MaxHandPocketDisplayItems - If AutoHandPocket=true, this is the maximum number of hand
//                pocket items that will be displayed during exception handling.  The 
//                default value is 100 items.  A common value used here is 4 items.
//
//AllowSkipItemRecovery- If AllowSkipItemRecovery is:
//                true - the "Skip Recovery" button will be the only button displayed during item recovery.
//                false- the "Skip Recovery" button will not be displayed during item recovery.
//                both - the "Skip Recovery" button will be displayed during item recovery along with normal feed button(s).
//                The default value is: false.
//
//------------------------------------------------------------------------------

[ExceptionHandling]
Enabled=true
AutoHandPocket=true
MaxHandPocketDisplayItems=4
AllowSkipItemRecovery=both

//------------------------------------------------------------------------------
//[Ranger GUI] - This section defines Ranger GUI related options.
//
//    DisplaySplashOncePerDay -  Set this to control the display frequency of
//                               the Ranger splash screen.  Valid values:
//
//                               true -      the splash screen will display once
//                                           per day;
//
//                               false -     the splash screen will display each
//                                           time Ranger is initialized;
//
//                               default   - false.
//
//
//------------------------------------------------------------------------------
[Ranger GUI]
DisplaySplashOncePerDay=false

//============================ IQA OPTIONS SECTION =============================

//------------------------------------------------------------------------------
// [IQA.General]
//
// General - This section defines high level configuration parameters related 
//           to Silver Bullet Technology's Image Quality Assurance (IQA) engine.
//
// Boolean variables must be set to "true" to be turned on. 
//   - Any value other than "true" is considered "false".
// 
// "EnableIQA": (Boolean "true"/"false", read only)
//   If "false", no IQA testing will be done. Ranger sets this value based 
//   on the value of [OptionalDevices] NeedIQA and the successfull loading of 
//   the IQA engine.
//
// "DocumentType1": (Text, such as "IQA.DefaultDocType")
//   Defines a unique document type. Each document type has its own set of 
//   tests and parameters. 
//   
// "DocumentType2"=
// "DocumentTypeN"=
//   SBT IQA will stop reading doc types when it encounters a blank or missing 
//   DocumentTypeN variable. 
//
// "ReturnFailureReasons": ("All", "One per image")
//   "All" - Return all failure reasons for each test.
//   "One per image" - For tests that have multiple failure modes, only the 
//   first failure will be reported.
//
// NOTES:
//  - Comment out a test section if you want to disable the test for a specific document type.
//
//    Example:
//            "//[IQA.DefaultDocType.Front.Bitonal.AboveMaxCompressedSize]"
//            "//Maximum Size=25000"
//
//  - DocumentType1 is used as the default document type.  The 'FederalReserveDocType' document type
//    has been added to facilitate the testing of documents according to the Federal Reserve Financial
//    Services IQA settings.  Furthermore, the Federal Reserve IQA settings do not address all tests
//    and certain settings do not address grayscale images.  This document type does not replace the
//    default document type.
//------------------------------------------------------------------------------

[IQA.General]
EnableIQA=false
StopOnFirstFailedTest=false
ReturnFailureReasons=All

DocumentType1=IQA.DefaultDocType
DocumentType2=IQA.FederalReserveDocType
DocumentType3=

//------------------------------------------------------------------------------

[IQA.DefaultDocType]

//--------------------------------------------------------
// AboveMaxCompressedSize - Configure the detection of images with where the 
//                          compressed image size is above a maximum threshold.
//
// "Maximum Size": (units = bytes)
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.AboveMaxCompressedSize]
Maximum Size=25000

[IQA.DefaultDocType.Rear.Bitonal.AboveMaxCompressedSize]
Maximum Size=20000

[IQA.DefaultDocType.Front.Grayscale.AboveMaxCompressedSize]
Maximum Size=100000

[IQA.DefaultDocType.Rear.Grayscale.AboveMaxCompressedSize]
Maximum Size=75000

//--------------------------------------------------------
// BelowMinCompressedSize - Configure the detection of images with where the 
//                          compressed image size is below a minimum threshold.
//
// "Minimum Size": (units = bytes)
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.BelowMinCompressedSize]
Minimum Size=5000

[IQA.DefaultDocType.Rear.Bitonal.BelowMinCompressedSize]
Minimum Size=750

[IQA.DefaultDocType.Front.Grayscale.BelowMinCompressedSize]
Minimum Size=20000

[IQA.DefaultDocType.Rear.Grayscale.BelowMinCompressedSize]
Minimum Size=10000

//--------------------------------------------------------
// CarbonStrip - Configure the detection of images containing a carbonized 
//               band on the rear of the check. If present, the band may 
//               interfere with the legibility of endorsements. The strip zone 
//               is between 1.40 and 1.90 inches from the bottom edge.
//             - Tests the strip zone for continuous scan lines with too many
//               black pixels.
//
// "Minimum Strip Height": (units = 1/10th of inch)
//   The minimum thickness used to define a carbon strip. Any band smaller 
//   than this is not considered a carbon strip.
//
//
// "Black Percentage": (units = 1/10th of percent)
//   Percentage of black pixels per scan line needed for the line to be 
//   considered part of the band.
//
//--------------------------------------------------------
[IQA.DefaultDocType.Rear.Bitonal.CarbonStrip]
Minimum Strip Height=2
Black Percentage=990

[IQA.DefaultDocType.Rear.Grayscale.CarbonStrip]
Minimum Strip Height=2
Black Percentage=990

//--------------------------------------------------------
// DimensionMismatch - Configure the detection of items with different front
//                     and rear image sizes.
//
// "Maximum Width Difference": (units = 1/10th of inch)
//   The maximum allowable difference between front and rear image widths.
//
// "Maximum Height Difference": (units = 1/10th of inch)
//   The maximum allowable difference between front and rear image heights.
//--------------------------------------------------------
[IQA.DefaultDocType.Bitonal.DimensionMismatch]
Maximum Width Difference=1
Maximum Height Difference=1

[IQA.DefaultDocType.Grayscale.DimensionMismatch]
Maximum Width Difference=1
Maximum Height Difference=1

//--------------------------------------------------------
// Excessive Skew - Configure the detection of images with improper alignment
//                  between document and image cameras.
//
// "Maximum Negative Angle In Hundredths Of Degrees":
//   The maximum counter clockwise documant rotation  for a valid image.
//
// "Maximum Positive Angle In Hundredths Of Degrees":
//   The maximum clockwise documant rotation for a valid image.
//
// "Test Bottom Only": If set to true, only the bottom edge of the image will
//   be used to determine skew.  Otherwise, both top and bottom will be used.
//
//  Note: "Maximum Negative Angle", "Maximum Positive Angle": Deprecated. Please use
//        "Maximum Negative Angle In Hundredths Of Degrees" or
//        "Maximum Positive Angle In Hundredths Of Degrees" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 200
Maximum Positive Angle In Hundredths Of Degrees = 200
Test Bottom Only = true

[IQA.DefaultDocType.Rear.Bitonal.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 200
Maximum Positive Angle In Hundredths Of Degrees = 200
Test Bottom Only = true

[IQA.DefaultDocType.Front.Grayscale.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 200
Maximum Positive Angle In Hundredths Of Degrees = 200
Test Bottom Only = true

[IQA.DefaultDocType.Rear.Grayscale.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 200
Maximum Positive Angle In Hundredths Of Degrees = 200
Test Bottom Only = true

//--------------------------------------------------------
// Framing Error - Configure the detection of additional scan lines with no document data.
//
// "Maximum Top Edge": (units = 1/10th of inch)
//   The maximum allowable top band thickness.
//
// "Maximum Left Edge": (units = 1/10th of inch)
//   The maximum allowable left band thickness.
//
// "Maximum Bottom Edge": (units = 1/10th of inch)
//   The maximum allowable bottom band thickness.
//
// "Maximum Right Edge": (units = 1/10th of inch)
//   The maximum allowable right band thickness.
//
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.FramingError]
Maximum Top Edge = 0
Maximum Left Edge = 0
Maximum Bottom Edge = 0
Maximum Right Edge = 0

[IQA.DefaultDocType.Front.Grayscale.FramingError]
Maximum Top Edge = 0
Maximum Left Edge = 0
Maximum Bottom Edge = 0
Maximum Right Edge = 0

//--------------------------------------------------------
// HorizontalStreaks - Section to configure detection of images containing 
//                     streaks that extend across the image.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines the top and bottom border areas to ignore. This is useful for
//   avoiding false positives on checks printed with decrative borders.
//
// "Minimum Streak Height": (units = pixels)
//   The minimum thickness used to define a streak. Any line smaller than this 
//   is not considered a streak.
//
// "Maximum Streak Height": (units = pixels)
//   If the thickness is greater than this value, the dark band is too thick 
//   to be considered a streak.
//
// "Maximum Streak Count": (units = integer)
//   The minimum number of streaks allowed. This value is used to determine 
//   the threshold for reporting a streak count error.
//
//          -A streak is defined by a minimum number of continuous
//           scan lines with too many black pixels. (There is no equivalent 
//           test for white pixels.)
// 
// "Black Percentage": (units = 1/10th of percent)
//   Percentage of black pixels per scan line needed for the line to be 
//   considered part of a streak.
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.HorizontalStreaks]
Ignore Margin Size=2.5
Minimum Streak Height=1
Maximum Streak Height=50
Maximum Streak Count=0
Black Percentage=990

[IQA.DefaultDocType.Rear.Bitonal.HorizontalStreaks]
Ignore Margin Size=2.5
Minimum Streak Height=1
Maximum Streak Height=50
Maximum Streak Count=0
Black Percentage=990

[IQA.DefaultDocType.Front.Grayscale.HorizontalStreaks]
Ignore Margin Size=2.5
Minimum Streak Height=1
Maximum Streak Height=50
Maximum Streak Count=0
Black Percentage=990

[IQA.DefaultDocType.Rear.Grayscale.HorizontalStreaks]
Ignore Margin Size=2.5
Minimum Streak Height=1
Maximum Streak Height=50
Maximum Streak Count=0
Black Percentage=990


//--------------------------------------------------------
// TooDark - Configure the detection of dark images.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Bitonal - An image is considered too dark if the number of black pixels 
//           exceeds the maximum tolerance.
// 
// "Maximum Black Percentage": (units = 1/10th of percent)
//   The maximum allowable percentage of black pixels.
//
// Grayscale - An image is considered too dark if the brightness percentage
//             is less than the Minimum Brightness Percentage.
//
// "Minimum Brightness Percentage": (units = 1/10th of percent)
//   The minimum allowable percentage of lightest gray level pixels.
//
// "Whitest Pixels Percentage": (units = 1 percent)
//   The percentage of total pixels that is used to find the brightest ones.
//   The recommended percentage is between 75 and 90.
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.TooDark]
Ignore Margin Size=2.5
Maximum Black Percentage=250

[IQA.DefaultDocType.Rear.Bitonal.TooDark]
Ignore Margin Size=2.5
Maximum Black Percentage=250

[IQA.DefaultDocType.Front.Grayscale.TooDark]
Ignore Margin Size=2.5
Minimum Brightness Percentage = 782
Whitest Pixels Percentage = 90

[IQA.DefaultDocType.Rear.Grayscale.TooDark]
Ignore Margin Size=2.5
Minimum Brightness Percentage = 782
Whitest Pixels Percentage = 90
//--------------------------------------------------------
// TooLight - Configure the detection of light images.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Bitonal - An image is considered too light if the number of black pixels 
//           is below the minimum tolerance.
// 
// "Minimum Black Percentage In Hundredths Of A Percentage":
//  The minimum allowable percentage of black pixels.
//
// Grayscale - An image is considered too light if the brightness percentage
//             exceeds the Maximum Brightness Percentage and the contrast
//             percentage is less than the Minimum Contrast Percentage.
//
// "Maximum Brightness Percentage": (units = 1/10th of percent)
//   The maximum allowable percentage of lightest gray level pixels.
//
// "Minimum Contrast Percentage": (units = 1/10th of percent)
//   The minimum allowable percentage of darkest gray level pixels.
//
// "Blackest Pixels Percentage": (units = 1 percent)
//   The percentage of total pixels that is used to find the darkest ones.
//   The recommended percentage is between 10 and 25.
//
// "Whitest Pixels Percentage": (units = 1 percent)
//   The percentage of total pixels that is used to find the brightest ones.
//   The recommended percentage is between 75 and 90.
//
// Note: "Minimum Black Percentage": Deprecated.  Please use
//       "Minimum Black Percentage In Hundredths Of A Percentage" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.Front.Bitonal.TooLight]
Ignore Margin Size=2.5
Minimum Black Percentage In Hundredths Of A Percentage = 400

[IQA.DefaultDocType.Rear.Bitonal.TooLight]
Ignore Margin Size=2.5
Minimum Black Percentage In Hundredths Of A Percentage = 20

[IQA.DefaultDocType.Front.Grayscale.TooLight]
Ignore Margin Size=2.5
Maximum Brightness Percentage = 782
Minimum Contrast Percentage  = 550
Blackest Pixels Percentage = 10
Whitest Pixels Percentage = 90

[IQA.DefaultDocType.Rear.Grayscale.TooLight]
Ignore Margin Size=2.5
Maximum Brightness Percentage = 782
Minimum Contrast Percentage = 550
Blackest Pixels Percentage = 10
Whitest Pixels Percentage = 90
//--------------------------------------------------------
// OversizeImage - Configure the detection of images with width or height 
//                 greater than maximum tolerances.
//
// "Maximum Width In Hundredths Of Inches":
//   The maximum width of a valid image.
//
// "Maximum Height In Hundredths Of Inches":
//   The maximum height of a valid image.
//
// Note: "Maximum Width", "Maximum Height": Deprecated.  Please use
//       "Maximum Width In Hundredths Of Inches" or
//       "Maximum Height In Hundredths Of Inches" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.OversizeImage]
Maximum Width In Hundredths Of Inches=900
Maximum Height In Hundredths Of Inches=450

//--------------------------------------------------------
// UndersizeImage - Configure the detection of images with width or height 
//                  below minimum tolerances.
//
// "Minimum Width In Hundredths Of Inches":
//   The minimum width of a valid image.
//
// "Minimum Height In Hundredths Of Inches":
//   The minimum height of a valid image.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Hundredths Of Inches" or
//       "Minimum Height In Hundredths Of Inches" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.UndersizeImage]
Minimum Width In Hundredths Of Inches=580
Minimum Height In Hundredths Of Inches=250

//--------------------------------------------------------
// TornEdges - Configure the detection of tears on any of the four
//             edges of a document.  Any detected tears below the
//             given size will not be reported.
//
// "Minimum Width In Thousandths Of Inches":
//   The minimum width of a detected tear.
//
// "Minimum Height In Thousandths Of Inches":
//   The minimum height of a detected tear.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Thousandths Of Inches" or
//       "Minimum Height In Thousandths Of Inches" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.TornEdges]
Left Minimum Width In Thousandths Of Inches=100
Left Minimum Height In Thousandths Of Inches=100
Right Minimum Width In Thousandths Of Inches=100
Right Minimum Height In Thousandths Of Inches=100
Top Minimum Width In Thousandths Of Inches=100
Top Minimum Height In Thousandths Of Inches=100
Bottom Minimum Width In Thousandths Of Inches=100
Bottom Minimum Height In Thousandths Of Inches=100

//--------------------------------------------------------
// Torn Corners - Configure the detection torn corners on any 
//                corner of a document.  Detected tears below the
//                given size will not be reported.
//
// "Minimum Width In Thousandths Of Inches":
//   The minimum width of a detected tear.
//
// "Minimum Height In Thousandths Of Inches":
//   The minimum height of a detected tear.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Thousandths Of Inches" or
//       "Minimum Height In Thousandths Of Inches" instead.
//--------------------------------------------------------
[IQA.DefaultDocType.TornCorners]
Top Left Minimum Width In Thousandths Of Inches=100
Top Left Minimum Height In Thousandths Of Inches=100
Bottom Left Minimum Width In Thousandths Of Inches=100
Bottom Left Minimum Height In Thousandths Of Inches=100
Top Right Minimum Width In Thousandths Of Inches=100
Top Right Minimum Height In Thousandths Of Inches=100
Bottom Right Minimum Width In Thousandths Of Inches=100
Bottom Right Minimum Height In Thousandths Of Inches=100

//--------------------------------------------------------
// Spot Noise - Configure the detection of excessive spot noise.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Threshold - This defect is detected if the average 200x200 pixel area 
//             spot noise count is above this threshold.
//
//--------------------------------------------------------
[IQA.DefaultDocType.Front.SpotNoise]
Ignore Margin Size=2.5
Threshold=11

[IQA.DefaultDocType.Rear.SpotNoise]
Ignore Margin Size=2.5
Threshold=11

//========================================================
[IQA.FederalReserveDocType]

//--------------------------------------------------------
// AboveMaxCompressedSize - Configure the detection of images with where the 
//                          compressed image size is above a maximum threshold.
//
// "Maximum Size": (units = bytes)
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.Bitonal.AboveMaxCompressedSize]
Maximum Size=200000

[IQA.FederalReserveDocType.Rear.Bitonal.AboveMaxCompressedSize]
Maximum Size=200000

//--------------------------------------------------------
// BelowMinCompressedSize - Configure the detection of images with where the 
//                          compressed image size is below a minimum threshold.
//
// "Minimum Size": (units = bytes)
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.Bitonal.BelowMinCompressedSize]
Minimum Size=250

[IQA.FederalReserveDocType.Rear.Bitonal.BelowMinCompressedSize]
Minimum Size=250

//--------------------------------------------------------
// Excessive Skew - Configure the detection of images with improper alignment
//                  between document and image cameras.
//
// "Maximum Negative Angle In Hundredths Of Degrees":
//   The maximum counter clockwise documant rotation  for a valid image.
//
// "Maximum Positive Angle In Hundredths Of Degrees":
//   The maximum clockwise documant rotation for a valid image.
//
// "Test Bottom Only": If set to true, only the bottom edge of the image will
//   be used to determine skew.  Otherwise, both top and bottom will be used.
//
//  Note: "Maximum Negative Angle", "Maximum Positive Angle": Deprecated. Please use
//        "Maximum Negative Angle In Hundredths Of Degrees" or
//        "Maximum Positive Angle In Hundredths Of Degrees" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.Bitonal.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 940
Maximum Positive Angle In Hundredths Of Degrees = 940
Test Bottom Only = true

[IQA.FederalReserveDocType.Rear.Bitonal.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 940
Maximum Positive Angle In Hundredths Of Degrees = 940
Test Bottom Only = true

[IQA.FederalReserveDocType.Front.Grayscale.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 940
Maximum Positive Angle In Hundredths Of Degrees = 940
Test Bottom Only = true

[IQA.FederalReserveDocType.Rear.Grayscale.ExcessiveSkew]
Maximum Negative Angle In Hundredths Of Degrees = 940
Maximum Positive Angle In Hundredths Of Degrees = 940
Test Bottom Only = true

//--------------------------------------------------------
// TooDark - Configure the detection of dark images.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Bitonal - An image is considered too dark if the number of black pixels 
//           exceeds the maximum tolerance.
// 
// "Maximum Black Percentage": (units = 1/10th of percent)
//   The maximum allowable percentage of black pixels.
//
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.Bitonal.TooDark]
Ignore Margin Size=2.5
Maximum Black Percentage=900

[IQA.FederalReserveDocType.Rear.Bitonal.TooDark]
Ignore Margin Size=2.5
Maximum Black Percentage=900

//--------------------------------------------------------
// TooLight - Configure the detection of light images.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Bitonal - An image is considered too light if the number of black pixels 
//           is below the minimum tolerance.
// 
// "Minimum Black Percentage In Hundredths Of A Percentage":
//  The minimum allowable percentage of black pixels.
//
// Note: "Minimum Black Percentage": Deprecated.  Please use
//       "Minimum Black Percentage In Hundredths Of A Percentage" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.Bitonal.TooLight]
Ignore Margin Size=2.5
Minimum Black Percentage In Hundredths Of A Percentage = 266

[IQA.FederalReserveDocType.Rear.Bitonal.TooLight]
Ignore Margin Size=2.5
Minimum Black Percentage In Hundredths Of A Percentage = 38

//--------------------------------------------------------
// OversizeImage - Configure the detection of images with width or height 
//                 greater than maximum tolerances.
//
// "Maximum Width In Hundredths Of Inches":
//   The maximum width of a valid image.
//
// "Maximum Height In Hundredths Of Inches":
//   The maximum height of a valid image.
//
// Note: "Maximum Width", "Maximum Height": Deprecated.  Please use
//       "Maximum Width In Hundredths Of Inches" or
//       "Maximum Height In Hundredths Of Inches" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.OversizeImage]
Maximum Width In Hundredths Of Inches=945
Maximum Height In Hundredths Of Inches=456

//--------------------------------------------------------
// UndersizeImage - Configure the detection of images with width or height 
//                  below minimum tolerances.
//
// "Minimum Width In Hundredths Of Inches":
//   The minimum width of a valid image.
//
// "Minimum Height In Hundredths Of Inches":
//   The minimum height of a valid image.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Hundredths Of Inches" or
//       "Minimum Height In Hundredths Of Inches" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.UndersizeImage]
Minimum Width In Hundredths Of Inches=410
Minimum Height In Hundredths Of Inches=214

//--------------------------------------------------------
// TornEdges - Configure the detection of tears on any of the four
//             edges of a document.  Any detected tears below the
//             given size will not be reported.
//
// "Minimum Width In Thousandths Of Inches":
//   The minimum width of a detected tear.
//
// "Minimum Height In Thousandths Of Inches":
//   The minimum height of a detected tear.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Thousandths Of Inches" or
//       "Minimum Height In Thousandths Of Inches" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.TornEdges]
Left Minimum Width In Thousandths Of Inches=70
Left Minimum Height In Thousandths Of Inches=70
Right Minimum Width In Thousandths Of Inches=70
Right Minimum Height In Thousandths Of Inches=70
Top Minimum Width In Thousandths Of Inches=70
Top Minimum Height In Thousandths Of Inches=70
Bottom Minimum Width In Thousandths Of Inches=70
Bottom Minimum Height In Thousandths Of Inches=70

//--------------------------------------------------------
// Torn Corners - Configure the detection torn corners on any 
//                corner of a document.  Detected tears below the
//                given size will not be reported.
//
// "Minimum Width In Thousandths Of Inches":
//   The minimum width of a detected tear.
//
// "Minimum Height In Thousandths Of Inches":
//   The minimum height of a detected tear.
//
// Note: "Minimum Width", "Minimum Height": Deprecated.  Please use
//       "Minimum Width In Thousandths Of Inches" or
//       "Minimum Height In Thousandths Of Inches" instead.
//--------------------------------------------------------
[IQA.FederalReserveDocType.TornCorners]
Top Left Minimum Width In Thousandths Of Inches=70
Top Left Minimum Height In Thousandths Of Inches=70
Bottom Left Minimum Width In Thousandths Of Inches=70
Bottom Left Minimum Height In Thousandths Of Inches=70
Top Right Minimum Width In Thousandths Of Inches=70
Top Right Minimum Height In Thousandths Of Inches=70
Bottom Right Minimum Width In Thousandths Of Inches=70
Bottom Right Minimum Height In Thousandths Of Inches=70

//--------------------------------------------------------
// Spot Noise - Configure the detection of excessive spot noise.
//
// "Ignore Margin Size": (units = 1/10th of inch)
//   Defines a border area around the image that is excluded during analysis.
//
// Threshold - This defect is detected if the average 200x200 pixel area 
//             spot noise count is above this threshold.
//
//--------------------------------------------------------
[IQA.FederalReserveDocType.Front.SpotNoise]
Ignore Margin Size=2.5
Threshold= 5852

[IQA.FederalReserveDocType.Rear.SpotNoise]
Ignore Margin Size=2.5
Threshold= 5852

[OcrReader1]
Font=E13B
Width=250
Height=20
VerticalCenter=15
Right=10

